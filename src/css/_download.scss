// Variables
$bgcolor: #85f7d8;
$black: #333333;

.downloadRequirementsFullfilled {
  display: none;
}

.download {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 75vh;
  padding: 0 25px;
  background: $bgcolor;
}

.downloadTitle {
  margin: 0 0 2rem 0;
  font-size: 2rem;
  line-height: 1.2;
}

.downloadParagraph {
  margin: 0 0 1rem 0;
}

// notify
.notify {
  margin-top: 40px;
}

.notifyForm {}
.notifySent {
  display: none;
}

.notifyInput {
  float: left;
  padding: 2px 5px;
  width: 60%;
  background: none;
  border: none;
  border-bottom: 2px solid $black;
  transition: border 0.3s;
}

.notifyInput:focus {
  outline: none;
}

.notifyInput.error {
  border-color: red;
}

.notifyButton {
  float: right;
  overflow: hidden;
  position: relative;
  display: block;
  width: 110px;
  height: 30px;
  background: none;
  border: none;
  z-index: 1;
  backface-visibility: hidden;
  cursor: pointer;
}

.notifyButton:focus {
  outline: none;
}

.notifyButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 2px solid $black;
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 50% 100%, 50% 90%, 50% 90%, 50% 100%, 0% 100%, 0% 0%);
  transform: translate3d(0, 100%, 0) translate3d(0, -2px, 0);
  transform-origin: 50%, 100%;
  transition: transform 0.3s, clip-path 1s;
  transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
}

.notifyButtonSpan {
  display: block;
  vertical-align: middle;
  transition: transform 0.3s, opacity 0.3s;
  transition-delay: 0.3s;
}

.notifyButtonIcon {
  position: absolute;
  top: 100%;
  left: 50%;
  margin-bottom: -10px;
  font-size: 1em;
  transform: translate3d(-50%, 0, 0);
  transition: transform 0.3s;
  transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
}

.notifyButtonIconSvg {
  padding: 2px 0 0 0;
  width: 20px;
  height: 20px;
}

.notifyButton:hover::before {
  transform: translate3d(0, 0, 0);
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 70% 100%, 70% 90%, 30% 90%, 30% 100%, 0% 100%, 0% 0%);
}

.notifyButton:hover .notifyButtonSpan {
  opacity: 0;
  transform: translate3d(0, -50%, 0);
  transition-delay: 0s;
}

.notifyButton:hover .notifyButtonIcon {
  transition-delay: 0.6s;
  transform: translate3d(-50%, -100%, 0);
}

// downloadButton
.downloadButton {
  display: block;
  position: relative;
  z-index: 1;
  width: 70px;
  height: 70px;
  min-width: 0;
  max-width: 250%;
  margin: 3em auto;
  padding: 0;
  vertical-align: middle;
  border: none;
  border-radius: 40px;
  transition: color 0.3s;
  backface-visibility: hidden;
  cursor: pointer;
}

.downloadButton:focus {
  outline: none;
}

.downloadButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  z-index: -1;
  box-shadow: inset 0 0 0 35px $black;
  transition: box-shadow 0.3s, transform 0.3s;
}

.downloadButtonIcon {
  width: 22px;
  font-size: 22px;
  font-family: 'Roboto Mono';
  position: relative;
  display: inline-block;
  transform: translate(0, 0);
  vertical-align: middle;
  text-rendering: auto;
  webkit-font-smoothing: antialiased;
}

.downloadButtonIconSvg {
  overflow: visible;
}

.downloadButtonIconArrow, .downloadButtonIconCaret {
  fill: $bgcolor;
  transform: translate(0, 0);
  transition: fill 0.3s, transform 0.3s;
}

.downloadButtonSpan {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  vertical-align: middle;
}

.downloadButton:hover {
  color: $black;
  background: $bgcolor;
}

.downloadButton:hover::before {
  box-shadow: inset 0 0 0 2px $black;
  transform: scale3d(1, 1, 1);
}

.downloadButton:hover .downloadButtonIconArrow, .downloadButton:hover .downloadButtonIconCaret {
  fill: $black;
}

.downloadButton:hover .downloadButtonIconArrow {
  animation: downloadArrowAnimation 3s infinite;
  animation-timing-function: linear;
}

@keyframes downloadArrowAnimation {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(0, 25px);
  }
  50% {
    transform: translate(0, 0);
  }
  75% {
    transform: translate(0, -25px);
  }
  100% {
    transform: translate(0, 0);
  }
}